d={}

from collections import OrderedDict
import numpy as np
import matplotlib.pyplot as plt
from matplotlib.animation import FuncAnimation


UA=149597870700 #m
j=86400 #s #equivalent a un jour terrestre
annees=1
dt=j # pas de temps #on considere un an comme 365 jours
tf=10*j #en s
ti=0
N=int((tf-ti)/dt)
t=np.linspace(ti,tf,N+1)

m1=4400
r1=np.array([[1],[2],[3]])
v1=np.array([[1.1],[1.2],[1.3]])
a1=np.array([[2.1],[2.2],[2.3]])

d[m1]=r1,v1,a1

"""r1=np.array([[10],[11],[12]])
d[m1]=r1,v1,a1""" #---> it works



m2=5000
r2=np.array([[4],[5],[6]])
v2=np.array([[1.4],[1.5],[1.6]])
a2=np.array([[2.4],[2.5],[2.6]])

d[m2]=r2,v2,a2

m3=6600
r3=np.array([[7],[8],[9]])
v3=np.array([[1.7],[1.8],[1.9]])
a3=np.array([[2.7],[2.8],[2.9]])

d[m3]=r3,v3,a3




G=6.67*10**-11 #m3.kg−1.s−2
"""for e in d:
    print(e,type(e),type(d[e]),type(d[e][0]))
masse = {i for i in d if (d[i][1]==v1).all()}
print(masse)"""

def A(r1,r2,m): 
    return G*m*(r2-r1)/((abs(r2-r1))**3)

def S_A(r,V2,dt): #puis-je mettre masse en argument?, comme ça j evite un loop
    res=0        #si on utilise un argument dans une premiere fonction il existe si la 2eme fonction ne l a pas en argument?
    for e in d:  
        f=d[e][0]+V2*dt
        if (r==f).all():
            continue
        res+=A(r,f-V2*dt,e)
    return res #retourne la somme des accelerations

def leapfrog(r,v,a,d,dt):
    V2=v+dt*a/2
    for i in d:
        if (d[i][0]==r).all():
            masse=i
            break
    r=r+dt*V2
    a=S_A(r,V2,dt)
    v=V2+(dt/2)*a
    return masse,r,v,a


d = dict(sorted(d.items(), reverse=True))
t2=t
for e1 in t2:
    d2={}
    for e2 in d:
        masse2,r,v,a=leapfrog(d[e2][0],d[e2][1],d[e2][2],d,dt)
        d2[masse2]=r,v,a
    d=d2

"""
fig = plt.figure()
plt.xlim(0, 25*10**10)
plt.ylim(0, 25*10**10)
graph, = plt.plot([], [], 'o')

def animate(i):
    graph.set_data(R[i+1:], R[:i+1])
    return graph

ani = FuncAnimation(fig, animate, frames=10, interval=200)
plt.show()
    """